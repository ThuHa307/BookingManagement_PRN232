@model WebMVC.Models.ChangePasswordViewModel
@{
    ViewData["Title"] = "Đổi mật khẩu";
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<section class="ftco-section contact-section ftco-no-pb" style="padding: 5em 0 !important">
    <div class="container">
        <div class="row justify-content-center pb-3">
            <div class="col-md-7 heading-section text-center ftco-animate">
                <span class="subheading">Bảo mật tài khoản</span>
                <h2 style="font-family: system-ui;" class="mb-4">Đổi mật khẩu</h2>
                <p class="text-muted">Vui lòng nhập thông tin để thay đổi mật khẩu của bạn.</p>
            </div>
        </div>

        <div class="row justify-content-center block-9">
            <div class="col-md-7 order-md-last d-flex ftco-animate">
                <div class="bg-light p-4 p-md-5 contact-form w-100">

                    <!-- Success/Error Messages -->
                    @if (!string.IsNullOrEmpty(TempData["SuccessMessage"] as string))
                    {
                        <script>
                            Swal.fire({
                                icon: 'success',
                                title: 'Thành công!',
                                text: '@Html.Raw(TempData["SuccessMessage"])',
                                timer: 4000,
                                showConfirmButton: false
                            });
                        </script>
                    }

                    @if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
                    {
                        <script>
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi!',
                                text: '@Html.Raw(TempData["ErrorMessage"])'
                            });
                        </script>
                    }

                    <!-- Change Password Form -->
                    <form asp-controller="Password" asp-action="ChangePassword" method="post" novalidate>
                        @Html.AntiForgeryToken()

                        <!-- Display Model Errors -->
                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <ul class="mb-0">
                                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                    {
                                        <li>@error.ErrorMessage</li>
                                    }
                                </ul>
                            </div>
                        }

                        <!-- Current Password -->
                        <div class="form-group">
                            <label asp-for="CurrentPassword" class="form-label">
                                <i class="fas fa-lock mr-2"></i>
                                @Html.DisplayNameFor(m => m.CurrentPassword)
                            </label>
                            <div class="input-group">
                                <input asp-for="CurrentPassword" class="form-control @(Html.ViewData.ModelState["CurrentPassword"]?.Errors.Count > 0 ? "is-invalid" : "")"
                                       placeholder="Nhập mật khẩu hiện tại" autocomplete="current-password">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('CurrentPassword')">
                                        <i class="fas fa-eye" id="toggleCurrentPasswordIcon"></i>
                                    </button>
                                </div>
                            </div>
                            <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                        </div>

                        <!-- New Password -->
                        <div class="form-group">
                            <label asp-for="NewPassword" class="form-label">
                                <i class="fas fa-key mr-2"></i>
                                @Html.DisplayNameFor(m => m.NewPassword)
                            </label>
                            <div class="input-group">
                                <input asp-for="NewPassword" class="form-control @(Html.ViewData.ModelState["NewPassword"]?.Errors.Count > 0 ? "is-invalid" : "")"
                                       placeholder="Nhập mật khẩu mới (ít nhất 6 ký tự)" autocomplete="new-password">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('NewPassword')">
                                        <i class="fas fa-eye" id="toggleNewPasswordIcon"></i>
                                    </button>
                                </div>
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>

                            <!-- Password Strength Indicator -->
                            <div class="mt-2">
                                <small class="text-muted">Độ mạnh mật khẩu:</small>
                                <div class="progress" style="height: 5px;">
                                    <div class="progress-bar" role="progressbar" id="passwordStrength" style="width: 0%"></div>
                                </div>
                                <small id="passwordStrengthText" class="text-muted"></small>
                            </div>
                        </div>

                        <!-- Confirm Password -->
                        <div class="form-group">
                            <label asp-for="ConfirmPassword" class="form-label">
                                <i class="fas fa-check-double mr-2"></i>
                                @Html.DisplayNameFor(m => m.ConfirmPassword)
                            </label>
                            <div class="input-group">
                                <input asp-for="ConfirmPassword" class="form-control" placeholder="Nhập lại mật khẩu mới" autocomplete="new-password">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('ConfirmPassword')">
                                        <i class="fas fa-eye" id="toggleConfirmPasswordIcon"></i>
                                    </button>
                                </div>
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>

                        <!-- Security Tips -->
                        <div class="alert alert-info">
                            <h6><i class="fas fa-info-circle mr-2"></i>Lưu ý bảo mật:</h6>
                            <ul class="mb-0 small">
                                <li>Sử dụng mật khẩu có ít nhất 8 ký tự</li>
                                <li>Kết hợp chữ hoa, chữ thường, số và ký tự đặc biệt</li>
                                <li>Không sử dụng thông tin cá nhân dễ đoán</li>
                                <li>Không chia sẻ mật khẩu với người khác</li>
                            </ul>
                        </div>

                        <!-- Action Buttons -->
                        <div class="form-group">
                            <button type="submit" class="btn btn-primary btn-block py-3">
                                <i class="fas fa-save mr-2"></i>
                                Đổi mật khẩu
                            </button>
                        </div>

                        <div class="text-center">
                            <a href="@Url.Action("Index", "Profile")" class="text-primary">
                                <i class="fas fa-arrow-left mr-1"></i>
                                Quay lại trang cá nhân
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <script>
        // Toggle password visibility
        function togglePassword(fieldName) {
            const passwordField = document.getElementById(fieldName);
            const toggleIcon = document.getElementById(`toggle${fieldName}Icon`);

            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                toggleIcon.classList.remove('fa-eye');
                toggleIcon.classList.add('fa-eye-slash');
            } else {
                passwordField.type = 'password';
                toggleIcon.classList.remove('fa-eye-slash');
                toggleIcon.classList.add('fa-eye');
            }
        }

        // Password strength checker
        document.getElementById('NewPassword').addEventListener('input', function(e) {
            const password = e.target.value;
            const strengthBar = document.getElementById('passwordStrength');
            const strengthText = document.getElementById('passwordStrengthText');

            let strength = 0;
            let text = '';
            let color = '';

            if (password.length >= 6) strength += 1;
            if (password.length >= 8) strength += 1;
            if (/[a-z]/.test(password)) strength += 1;
            if (/[A-Z]/.test(password)) strength += 1;
            if (/[0-9]/.test(password)) strength += 1;
            if (/[^A-Za-z0-9]/.test(password)) strength += 1;

            switch (strength) {
                case 0:
                case 1:
                    text = 'Rất yếu';
                    color = 'bg-danger';
                    break;
                case 2:
                case 3:
                    text = 'Yếu';
                    color = 'bg-warning';
                    break;
                case 4:
                    text = 'Trung bình';
                    color = 'bg-info';
                    break;
                case 5:
                    text = 'Mạnh';
                    color = 'bg-success';
                    break;
                case 6:
                    text = 'Rất mạnh';
                    color = 'bg-success';
                    break;
            }

            const percentage = (strength / 6) * 100;
            strengthBar.style.width = percentage + '%';
            strengthBar.className = `progress-bar ${color}`;
            strengthText.textContent = text;
            strengthText.className = `text-${color.replace('bg-', '')}`;
        });

        // Form validation
        document.querySelector('form').addEventListener('submit', function(e) {
            const currentPassword = document.getElementById('CurrentPassword').value;
            const newPassword = document.getElementById('NewPassword').value;
            const confirmPassword = document.getElementById('ConfirmPassword').value;

            // Client-side validation
            if (!currentPassword || !newPassword || !confirmPassword) {
                e.preventDefault();
                Swal.fire({
                    icon: 'warning',
                    title: 'Thông báo',
                    text: 'Vui lòng điền đầy đủ thông tin'
                });
                return false;
            }

            if (newPassword.length < 6) {
                e.preventDefault();
                Swal.fire({
                    icon: 'warning',
                    title: 'Thông báo',
                    text: 'Mật khẩu mới phải có ít nhất 6 ký tự'
                });
                return false;
            }

            if (newPassword !== confirmPassword) {
                e.preventDefault();
                Swal.fire({
                    icon: 'warning',
                    title: 'Thông báo',
                    text: 'Mật khẩu xác nhận không khớp'
                });
                return false;
            }

            if (currentPassword === newPassword) {
                e.preventDefault();
                Swal.fire({
                    icon: 'warning',
                    title: 'Thông báo',
                    text: 'Mật khẩu mới phải khác mật khẩu hiện tại'
                });
                return false;
            }

            // Show loading chỉ khi validation pass
            Swal.fire({
                title: 'Đang xử lý...',
                text: 'Vui lòng chờ trong giây lát',
                allowOutsideClick: false,
                showConfirmButton: false,
                willOpen: () => {
                    Swal.showLoading();
                }
            });

            // Let form submit naturally để server có thể xử lý và trả về lỗi
            return true;
        });

        // Đóng loading nếu có lỗi server (trang reload với lỗi)
        document.addEventListener('DOMContentLoaded', function() {
            // Nếu có ModelState errors, đóng loading
        @if (!ViewData.ModelState.IsValid)
        {
            <text>
                    Swal.close();
            </text>
        }
        });
    </script>
}